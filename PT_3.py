"""
Задание 1.
"""
# Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
def division(arg1=1, arg2=1):
    # Числа запрашивать у пользователя
    arg1 = float(input('Введите делимое '))
    arg2 = float(input('Введите делитель '))
    # предусмотреть обработку ситуации деления на ноль
    try:
        quotient = arg1 / arg2
    except ZeroDivisionError:
        return 'Деление на ноль не определено'
    return quotient

print(division())

"""
Задание2.
"""
# Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя:
# имя, фамилия, год рождения, город проживания, email, телефон.
def profile(first_name, last_name, b_year, city, mail, phone):
    # Реализовать вывод данных о пользователе одной строкой.
    print(f"Profile. {first_name} {last_name}, born in {b_year}. Contacts: {city}, {mail}, {phone}")
# Функция должна принимать параметры как именованные аргументы.
profile(city='City1', last_name='LastName1', b_year=1111, phone='nomber1', mail='mail@mail.1', first_name='FirstName1')

"""
Задание 3.
"""
# Реализовать функцию my_func(), которая принимает три позиционных аргумента
def my_func(a, b, c):
    # max(a, b) + max(a, c) вариант1 найти максимумы по парам
    return a + b + c - min(a, b, c)  # варинт2 найти сумму всех и вычесть минимальное

print(my_func(2, 1, 7)) # возвращает сумму наибольших двух аргументов.

"""
Задание4.
"""
# Необходимо выполнить возведение числа x в степень y.
# Первый вариант — возведение в степень с помощью оператора **.
def my_func_1(x, y):
    return x ** y
# Второй вариант — более сложная реализация без оператора **, предусматривающая использование цикла.
def my_func_2(x, y):
    result = x
    for i in range(-y - 1):
        result = result * x
        y += 1
    '''вариант чрез while
    while y < -1:
        result = result*x
        y += 1'''
    return 1 / result
# Программа принимает действительное положительное число x и целое отрицательное число y.
x = float(input('Введите действительное положительное число (x)'))
y = int(input('Введите целое отрицательное число (y)'))

if (x > 0 and y < 0):
    print(f"Вариант 1: {x}^{y} = {my_func_1(x, y)}")
    print(f"Вариант 2: {x}^{y} = {my_func_2(x, y)}")
else:
    print('Ошибка ввода даных ¯\_(ツ)_/¯')

"""
Задание 5.
"""
# выполнение подстроено так, чтоб при вводе значения, неконвертируемого под тип float не было вылетов
def sum_up(numb_list, summ):
    for numb in few_numb.split(' '):  # получаем список чисел
        summ += float(numb) # Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме.
    return summ

exe_flag = True
summ = 0
while exe_flag: # Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter.
    few_numb = input('Введите несколько чисел через пробел ') # Программа запрашивает у пользователя строку чисел, разделенных пробелом.
    if few_numb.count('@') <= 0:
        exe_flag = True
    else:
        few_numb = few_numb[:few_numb.index('@') - 1] # Если специальный символ введен после нескольких чисел,
        exe_flag = False # если вместо числа вводится специальный символ, выполнение программы завершается.
    summ = sum_up(few_numb, summ)
    print("Сумма всех предшествующих введенных чисел = ", summ) # При нажатии Enter должна выводиться сумма чисел.
print('ну да, ну да, пора заканчивать. Удач! (¬‿¬)')

"""
Задание 6. 
"""
# Реализовать функцию int_func(), принимающую слово и возвращающую его же, но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
# В программу должна попадать строка из слов, разделенных пробелом.
# Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы.
# Необходимо использовать написанную ранее функцию int_func().

def int_func(word):
    return word.title()

word = input("Введите слово, пожалуйста: ")
print(int_func(word.lower()))

words_list = input("Введите, пожалуйста, строку из слов, разделенных пробелами: ")
for word in words_list.split(' '):  # получаем список чисел
    print(int_func(word.lower()))
